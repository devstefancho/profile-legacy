{"version":3,"sources":["components/Layout.tsx","components/Details.tsx","components/CardContainer.tsx","components/Content.tsx","components/Resume.tsx","components/profile/Avartar.tsx","svg/github.svg","svg/blog.svg","svg/gmail.svg","svg/stackoverflow.svg","svg/linkedin.svg","components/profile/Icons.tsx","components/profile/ProfileContainer.tsx","components/Card.tsx","App.tsx","index.tsx"],"names":["Layout","className","path","Details","CardContainer","renderCards","content","map","id","title","desc","Content","Resume","Avartar","src","alt","initialMessage","RenderIcon","props","render","href","target","Icons","useState","message","setMessage","onClickCopyGmail","a","navigator","clipboard","writeText","url","gmail","onMouseLeaveIcon","setTimeout","renderToolTip","Tooltip","github","Github","blog","Blog","stackoverflow","Stackoverflow","linkedin","Linkedin","OverlayTrigger","placement","overlay","onClick","onMouseLeave","Gmail","ProfileContainer","getIconName","icon","test","Card","renderDesc","item","period","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d2f3df80.chunk.js","sourcesContent":["import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Content, ProfileContainer, Details } from '.';\n\nexport const Layout: React.FC = () => {\n  return (\n    <Router>\n      <div className='layout-container'>\n        <section className='profile'>\n          <ProfileContainer />\n        </section>\n        <section className='main'>\n          <Content />\n          <Switch>\n            <Route path='/resume'>\n              <Details />\n            </Route>\n          </Switch>\n        </section>\n      </div>\n    </Router>\n  );\n};\n","import { Resume } from '.';\n\nexport const Details: React.FC = () => {\n  return (\n    <div>\n      <Resume />\n    </div>\n  );\n};\n","import { Card } from '.';\nimport content from '../json/content.json';\n\nexport const CardContainer: React.FC = () => {\n  const renderCards = content.map(({ id, title, desc }) => {\n    return <Card key={id} id={id} title={title} desc={desc} />;\n  });\n\n  return <div>{renderCards}</div>;\n};\n","import { CardContainer } from './CardContainer';\n\nexport const Content: React.FC = () => {\n  return (\n    <div className='content-container'>\n      <CardContainer />\n    </div>\n  );\n};\n","export const Resume: React.FC = () => {\n  return <div>Resume details...</div>;\n};\n","export const Avartar: React.FC = () => {\n  return (\n    <div className='avartar-container'>\n      <div className='avartar-image'>\n        <img\n          src='https://images.unsplash.com/photo-1517336714731-489689fd1ca8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2826&q=80'\n          alt='avartar'\n        />\n      </div>\n      <div className='avartar-name'>Stefan Cho</div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/github.50c72c9f.svg\";","export default __webpack_public_path__ + \"static/media/blog.c4981c9d.svg\";","export default __webpack_public_path__ + \"static/media/gmail.f5f3b7ef.svg\";","export default __webpack_public_path__ + \"static/media/stackoverflow.ceb2e1b5.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.963c1829.svg\";","import { ReactElement, useState } from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { OverlayChildren } from 'react-bootstrap/esm/Overlay';\nimport { Github, Blog, Gmail, Stackoverflow, Linkedin } from '../../svg';\nimport url from '../../json/url.json';\n\nconst initialMessage = 'Copy to Clipboard';\nconst copied = 'Copied!';\n\ntype RenderIcon = {\n  href: string;\n  src: string;\n  alt?: string;\n};\n\ntype RenderCustomIcon = {\n  render: () => ReactElement;\n};\n\ntype RenderIconProps = RenderIcon | RenderCustomIcon;\n\nconst RenderIcon = (props: RenderIconProps) => {\n  if ('render' in props) {\n    return props.render();\n  }\n\n  return (\n    <div className='icon'>\n      <a href={props.href} target='_blank'>\n        <img src={props.src} alt={props.alt} />\n      </a>\n    </div>\n  );\n};\n\nexport const Icons: React.FC = () => {\n  const [message, setMessage] = useState<string>(initialMessage);\n\n  const onClickCopyGmail = async () => {\n    await navigator.clipboard.writeText(url.gmail);\n    setMessage(copied);\n  };\n\n  const onMouseLeaveIcon: React.MouseEventHandler<HTMLDivElement> = () => {\n    setTimeout(() => setMessage(initialMessage), 500);\n  };\n\n  const renderToolTip: OverlayChildren = (props) => {\n    return (\n      <Tooltip id='gmail-tooltip' {...props}>\n        {message}\n      </Tooltip>\n    );\n  };\n\n  return (\n    <div className='icon-container d-flex justify-content-between'>\n      <RenderIcon href={url.github} src={Github} alt='github' />\n      <RenderIcon href={url.blog} src={Blog} alt='blog' />\n      <RenderIcon\n        href={url.stackoverflow}\n        src={Stackoverflow}\n        alt='stackoverflow'\n      />\n      <RenderIcon href={url.linkedin} src={Linkedin} alt='linkedin' />\n      <RenderIcon\n        render={() => (\n          <OverlayTrigger placement='top-start' overlay={renderToolTip}>\n            <div\n              className='icon'\n              onClick={onClickCopyGmail}\n              onMouseLeave={onMouseLeaveIcon}\n            >\n              <a href={`mailto:${url.gmail}`} target='_blank'>\n                <img src={Gmail} alt={'gmail'} />\n              </a>\n            </div>\n          </OverlayTrigger>\n        )}\n      />\n    </div>\n  );\n};\n","import { Avartar, Icons } from '.';\n\nexport const ProfileContainer: React.FC = () => {\n  return (\n    <div className='profile d-flex flex-column'>\n      <Avartar />\n      <Icons />\n    </div>\n  );\n};\n","import { Icon } from '@iconify/react';\ninterface DescItem {\n  content: string;\n  period?: string;\n  url?: string;\n  icon?: string;\n}\n\ninterface CardProps {\n  id: string;\n  title: string;\n  desc: DescItem[];\n}\n\nconst getIconName = (icon: string) => {\n  return /[:]/.test(icon) ? icon : `logos:${icon}`;\n};\n\nexport const Card: React.FC<CardProps> = ({ id, title, desc }) => {\n  const renderDesc = desc.map((item) => {\n    if (item.url && item.icon) {\n      return (\n        <a\n          key={title}\n          href={item.url}\n          target='_blank'\n          className='d-flex align-items-center'\n        >\n          <Icon icon={getIconName(item.icon)} />\n          <div className='p-2'>{item.content}</div>\n        </a>\n      );\n    }\n\n    if (item.period) {\n      return (\n        <div>\n          <div className=''>{item.period}</div>\n          <div className='fw-bold'>{item.content}</div>\n        </div>\n      );\n    }\n\n    if (item.icon) {\n      return (\n        <div key={title} className='d-flex align-items-center'>\n          <Icon icon={getIconName(item.icon)} />\n          <div className='p-2'>{item.content}</div>\n        </div>\n      );\n    }\n    return (\n      <div key={title}>\n        <div>{item.content}</div>\n      </div>\n    );\n  });\n\n  return (\n    <div className='card-box'>\n      <section className='card-title'>{title}</section>\n      <section className='d-flex'>\n        <div className='card-desc'>{renderDesc}</div>\n      </section>\n    </div>\n  );\n};\n","import { Layout } from './components';\nimport './sass/app.scss';\n\nfunction App() {\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}